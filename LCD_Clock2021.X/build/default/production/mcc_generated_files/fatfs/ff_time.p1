Version 3.2 HI-TECH Software Intermediate Code
"84 mcc_generated_files/fatfs/../../main.h
[s S6 `ui 1 `ui 1 `ui 1 `ui 1 `uc 1 `uc 1 ]
[n S6 . x y xw yw font mode ]
"19 mcc_generated_files/fatfs/../../RTC8025.h
[v _Bcd2Hex `(uc ~T0 @X0 0 ef1`uc ]
[; ;integer.h: 16: typedef int INT;
[; ;integer.h: 17: typedef unsigned int UINT;
[; ;integer.h: 20: typedef unsigned char BYTE;
[; ;integer.h: 23: typedef short SHORT;
[; ;integer.h: 24: typedef unsigned short WORD;
[; ;integer.h: 25: typedef unsigned short WCHAR;
[; ;integer.h: 28: typedef long LONG;
[; ;integer.h: 29: typedef unsigned long DWORD;
[; ;ff.h: 76: typedef char TCHAR;
[; ;ff.h: 90: typedef DWORD FSIZE_t;
[; ;ff.h: 97: typedef struct {
[; ;ff.h: 98: BYTE fs_type;
[; ;ff.h: 99: BYTE pdrv;
[; ;ff.h: 100: BYTE n_fats;
[; ;ff.h: 101: BYTE wflag;
[; ;ff.h: 102: BYTE fsi_flag;
[; ;ff.h: 103: WORD id;
[; ;ff.h: 104: WORD n_rootdir;
[; ;ff.h: 105: WORD csize;
[; ;ff.h: 119: DWORD last_clst;
[; ;ff.h: 120: DWORD free_clst;
[; ;ff.h: 130: DWORD n_fatent;
[; ;ff.h: 131: DWORD fsize;
[; ;ff.h: 132: DWORD volbase;
[; ;ff.h: 133: DWORD fatbase;
[; ;ff.h: 134: DWORD dirbase;
[; ;ff.h: 135: DWORD database;
[; ;ff.h: 136: DWORD winsect;
[; ;ff.h: 137: BYTE win[512];
[; ;ff.h: 138: } FATFS;
[; ;ff.h: 144: typedef struct {
[; ;ff.h: 145: FATFS* fs;
[; ;ff.h: 146: WORD id;
[; ;ff.h: 147: BYTE attr;
[; ;ff.h: 148: BYTE stat;
[; ;ff.h: 149: DWORD sclust;
[; ;ff.h: 150: FSIZE_t objsize;
[; ;ff.h: 161: } FFOBJID;
[; ;ff.h: 167: typedef struct {
[; ;ff.h: 168: FFOBJID obj;
[; ;ff.h: 169: BYTE flag;
[; ;ff.h: 170: BYTE err;
[; ;ff.h: 171: FSIZE_t fptr;
[; ;ff.h: 172: DWORD clust;
[; ;ff.h: 173: DWORD sect;
[; ;ff.h: 175: DWORD dir_sect;
[; ;ff.h: 176: BYTE* dir_ptr;
[; ;ff.h: 184: } FIL;
[; ;ff.h: 190: typedef struct {
[; ;ff.h: 191: FFOBJID obj;
[; ;ff.h: 192: DWORD dptr;
[; ;ff.h: 193: DWORD clust;
[; ;ff.h: 194: DWORD sect;
[; ;ff.h: 195: BYTE* dir;
[; ;ff.h: 196: BYTE fn[12];
[; ;ff.h: 203: } FFDIR;
[; ;ff.h: 209: typedef struct {
[; ;ff.h: 210: FSIZE_t fsize;
[; ;ff.h: 211: WORD fdate;
[; ;ff.h: 212: WORD ftime;
[; ;ff.h: 213: BYTE fattrib;
[; ;ff.h: 218: TCHAR fname[12 + 1];
[; ;ff.h: 220: } FILINFO;
[; ;ff.h: 226: typedef enum {
[; ;ff.h: 227: FR_OK = 0,
[; ;ff.h: 228: FR_DISK_ERR,
[; ;ff.h: 229: FR_INT_ERR,
[; ;ff.h: 230: FR_NOT_READY,
[; ;ff.h: 231: FR_NO_FILE,
[; ;ff.h: 232: FR_NO_PATH,
[; ;ff.h: 233: FR_INVALID_NAME,
[; ;ff.h: 234: FR_DENIED,
[; ;ff.h: 235: FR_EXIST,
[; ;ff.h: 236: FR_INVALID_OBJECT,
[; ;ff.h: 237: FR_WRITE_PROTECTED,
[; ;ff.h: 238: FR_INVALID_DRIVE,
[; ;ff.h: 239: FR_NOT_ENABLED,
[; ;ff.h: 240: FR_NO_FILESYSTEM,
[; ;ff.h: 241: FR_MKFS_ABORTED,
[; ;ff.h: 242: FR_TIMEOUT,
[; ;ff.h: 243: FR_LOCKED,
[; ;ff.h: 244: FR_NOT_ENOUGH_CORE,
[; ;ff.h: 245: FR_TOO_MANY_OPEN_FILES,
[; ;ff.h: 246: FR_INVALID_PARAMETER
[; ;ff.h: 247: } FRESULT;
[; ;ff.h: 254: FRESULT f_open (FIL* fp, const TCHAR* path, BYTE mode);
[; ;ff.h: 255: FRESULT f_close (FIL* fp);
[; ;ff.h: 256: FRESULT f_read (FIL* fp, void* buff, UINT btr, UINT* br);
[; ;ff.h: 257: FRESULT f_write (FIL* fp, const void* buff, UINT btw, UINT* bw);
[; ;ff.h: 258: FRESULT f_lseek (FIL* fp, FSIZE_t ofs);
[; ;ff.h: 259: FRESULT f_truncate (FIL* fp);
[; ;ff.h: 260: FRESULT f_sync (FIL* fp);
[; ;ff.h: 261: FRESULT f_opendir (FFDIR* dp, const TCHAR* path);
[; ;ff.h: 262: FRESULT f_closedir (FFDIR* dp);
[; ;ff.h: 263: FRESULT f_readdir (FFDIR* dp, FILINFO* fno);
[; ;ff.h: 264: FRESULT f_findfirst (FFDIR* dp, FILINFO* fno, const TCHAR* path, const TCHAR* pattern);
[; ;ff.h: 265: FRESULT f_findnext (FFDIR* dp, FILINFO* fno);
[; ;ff.h: 266: FRESULT f_mkdir (const TCHAR* path);
[; ;ff.h: 267: FRESULT f_unlink (const TCHAR* path);
[; ;ff.h: 268: FRESULT f_rename (const TCHAR* path_old, const TCHAR* path_new);
[; ;ff.h: 269: FRESULT f_stat (const TCHAR* path, FILINFO* fno);
[; ;ff.h: 270: FRESULT f_chmod (const TCHAR* path, BYTE attr, BYTE mask);
[; ;ff.h: 271: FRESULT f_utime (const TCHAR* path, const FILINFO* fno);
[; ;ff.h: 272: FRESULT f_chdir (const TCHAR* path);
[; ;ff.h: 273: FRESULT f_chdrive (const TCHAR* path);
[; ;ff.h: 274: FRESULT f_getcwd (TCHAR* buff, UINT len);
[; ;ff.h: 275: FRESULT f_getfree (const TCHAR* path, DWORD* nclst, FATFS** fatfs);
[; ;ff.h: 276: FRESULT f_getlabel (const TCHAR* path, TCHAR* label, DWORD* vsn);
[; ;ff.h: 277: FRESULT f_setlabel (const TCHAR* label);
[; ;ff.h: 278: FRESULT f_forward (FIL* fp, UINT(*func)(const BYTE*,UINT), UINT btf, UINT* bf);
[; ;ff.h: 279: FRESULT f_expand (FIL* fp, FSIZE_t szf, BYTE opt);
[; ;ff.h: 280: FRESULT f_mount (FATFS* fs, const TCHAR* path, BYTE opt);
[; ;ff.h: 281: FRESULT f_mkfs (const TCHAR* path, BYTE opt, DWORD au, void* work, UINT len);
[; ;ff.h: 282: FRESULT f_fdisk (BYTE pdrv, const DWORD* szt, void* work);
[; ;ff.h: 283: FRESULT f_setcp (WORD cp);
[; ;ff.h: 284: int f_putc (TCHAR c, FIL* fp);
[; ;ff.h: 285: int f_puts (const TCHAR* str, FIL* cp);
[; ;ff.h: 286: int f_printf (FIL* fp, const TCHAR* str, ...);
[; ;ff.h: 287: TCHAR* f_gets (TCHAR* buff, int len, FIL* fp);
[; ;ff.h: 310: DWORD get_fattime (void);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef __int24 int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 52: typedef unsigned char uint8_t;
[; ;stdint.h: 58: typedef unsigned int uint16_t;
[; ;stdint.h: 65: typedef __uint24 uint24_t;
[; ;stdint.h: 72: typedef unsigned long int uint32_t;
[; ;stdint.h: 88: typedef signed char int_least8_t;
[; ;stdint.h: 96: typedef signed int int_least16_t;
[; ;stdint.h: 109: typedef __int24 int_least24_t;
[; ;stdint.h: 118: typedef signed long int int_least32_t;
[; ;stdint.h: 136: typedef unsigned char uint_least8_t;
[; ;stdint.h: 143: typedef unsigned int uint_least16_t;
[; ;stdint.h: 154: typedef __uint24 uint_least24_t;
[; ;stdint.h: 162: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 181: typedef signed char int_fast8_t;
[; ;stdint.h: 188: typedef signed int int_fast16_t;
[; ;stdint.h: 200: typedef __int24 int_fast24_t;
[; ;stdint.h: 208: typedef signed long int int_fast32_t;
[; ;stdint.h: 224: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 230: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 240: typedef __uint24 uint_fast24_t;
[; ;stdint.h: 247: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 268: typedef int32_t intmax_t;
[; ;stdint.h: 282: typedef uint32_t uintmax_t;
[; ;stdint.h: 289: typedef int16_t intptr_t;
[; ;stdint.h: 294: typedef uint16_t uintptr_t;
"21 mcc_generated_files/fatfs/../../main.h
[v _SlideSWStatus `uc ~T0 @X0 1 e ]
[i _SlideSWStatus
-> -> 15 `i `uc
]
[; ;main.h: 21: uint8_t SlideSWStatus = 0x0f;
[; ;main.h: 84: typedef struct {
[; ;main.h: 85: uint16_t x;
[; ;main.h: 86: uint16_t y;
[; ;main.h: 87: uint16_t xw;
[; ;main.h: 88: uint16_t yw;
[; ;main.h: 89: uint8_t font;
[; ;main.h: 90: uint8_t mode;
[; ;main.h: 91: } rbox;
"100
[v _RTime `S6 ~T0 @X0 -> 3 `i e ]
[i _RTime
:U ..
:U ..
"101
-> -> 20 `i `ui
-> -> 35 `i `ui
-> * + + * -> 4 `i -> 20 `i -> 6 `i -> 2 `i -> 2 `i `ui
-> + * -> 27 `i -> 2 `i -> 4 `i `ui
-> -> 2 `i `uc
-> -> 2 `i `uc
..
:U ..
"102
-> -> 0 `i `ui
-> -> 15 `i `ui
-> * + + * -> 4 `i -> 20 `i -> 6 `i -> 2 `i -> 2 `i `ui
-> + * -> 27 `i -> 2 `i -> 4 `i `ui
-> -> 1 `i `uc
-> -> 0 `i `uc
..
:U ..
"103
-> -> 100 `i `ui
-> -> 140 `i `ui
-> -> 90 `i `ui
-> -> 90 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 100: rbox RTime[3] = {
[; ;main.h: 101: { 20, 35, (4*20+6+2)*2, 27*2+4, 2, 2 },
[; ;main.h: 102: { 0, 15, (4*20+6+2)*2, 27*2+4, 1, 0 },
[; ;main.h: 103: { 100, 140, 90, 90, 2, 0 },
[; ;main.h: 104: };
"105
[v _RDate `S6 ~T0 @X0 -> 3 `i e ]
[i _RDate
:U ..
:U ..
"106
-> -> 30 `i `ui
-> -> 10 `i `ui
-> + + * * -> 5 `i -> 8 `i -> 2 `i * * -> 3 `i -> 8 `i -> 2 `i * * -> 5 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"107
-> -> 0 `i `ui
-> -> 0 `i `ui
-> + + * * -> 5 `i -> 8 `i -> 2 `i * * -> 3 `i -> 8 `i -> 2 `i * * -> 5 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"108
-> -> 0 `i `ui
-> -> 0 `i `ui
-> + + * * -> 5 `i -> 8 `i -> 2 `i * * -> 3 `i -> 8 `i -> 2 `i * * -> 5 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 105: rbox RDate[3] = {
[; ;main.h: 106: { 30, 10, 5*8*2 + 3*8*2 + 5*8*2, 8*2+2, 2, 0 },
[; ;main.h: 107: { 0, 0, 5*8*2 + 3*8*2 + 5*8*2, 8*2+2, 2, 0 },
[; ;main.h: 108: { 0, 0, 5*8*2 + 3*8*2 + 5*8*2, 8*2+2, 2, 0 },
[; ;main.h: 109: };
"110
[v _RYear `S6 ~T0 @X0 -> 3 `i e ]
[i _RYear
:U ..
:U ..
"111
-> -> 30 `i `ui
-> -> 10 `i `ui
-> * * -> 5 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"112
-> -> 0 `i `ui
-> -> 0 `i `ui
-> * * -> 5 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"113
-> -> 0 `i `ui
-> -> 0 `i `ui
-> * * -> 5 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 110: rbox RYear[3] = {
[; ;main.h: 111: { 30, 10, 5*8*2, 8*2+2, 2, 0 },
[; ;main.h: 112: { 0, 0, 5*8*2, 8*2+2, 2, 0 },
[; ;main.h: 113: { 0, 0, 5*8*2, 8*2+2, 2, 0 },
[; ;main.h: 114: };
"115
[v _RMonth `S6 ~T0 @X0 -> 3 `i e ]
[i _RMonth
:U ..
:U ..
"116
-> + -> 30 `i * * -> 5 `i -> 8 `i -> 2 `i `ui
-> -> 10 `i `ui
-> * * -> 3 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"117
-> * * -> 5 `i -> 8 `i -> 2 `i `ui
-> -> 0 `i `ui
-> * * -> 3 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"118
-> * * -> 5 `i -> 8 `i -> 2 `i `ui
-> -> 0 `i `ui
-> * * -> 3 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 115: rbox RMonth[3] = {
[; ;main.h: 116: { 30 + 5*8*2, 10, 3*8*2, 8*2+2, 2, 0 },
[; ;main.h: 117: { 5*8*2, 0, 3*8*2, 8*2+2, 2, 0 },
[; ;main.h: 118: { 5*8*2, 0, 3*8*2, 8*2+2, 2, 0 },
[; ;main.h: 119: };
"120
[v _RDay `S6 ~T0 @X0 -> 3 `i e ]
[i _RDay
:U ..
:U ..
"121
-> + + -> 30 `i * * -> 5 `i -> 8 `i -> 2 `i * * -> 3 `i -> 8 `i -> 2 `i `ui
-> -> 10 `i `ui
-> * * -> 5 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"122
-> + * * -> 5 `i -> 8 `i -> 2 `i * * -> 3 `i -> 8 `i -> 2 `i `ui
-> -> 0 `i `ui
-> * * -> 5 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"123
-> + * * -> 5 `i -> 8 `i -> 2 `i * * -> 3 `i -> 8 `i -> 2 `i `ui
-> -> 0 `i `ui
-> * * -> 5 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 120: rbox RDay[3] = {
[; ;main.h: 121: { 30 + 5*8*2 + 3*8*2, 10, 5*8*2, 8*2+2, 2, 0 },
[; ;main.h: 122: { 5*8*2 + 3*8*2, 0, 5*8*2, 8*2+2, 2, 0 },
[; ;main.h: 123: { 5*8*2 + 3*8*2, 0, 5*8*2, 8*2+2, 2, 0 },
[; ;main.h: 124: };
"125
[v _RTemp `S6 ~T0 @X0 -> 3 `i e ]
[i _RTemp
:U ..
:U ..
"126
-> -> 230 `i `ui
-> -> 100 `i `ui
-> -> 50 `i `ui
-> -> 15 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"127
-> -> 230 `i `ui
-> -> 0 `i `ui
-> -> 50 `i `ui
-> -> 15 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"128
-> -> 230 `i `ui
-> -> 0 `i `ui
-> -> 50 `i `ui
-> -> 15 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 125: rbox RTemp[3] = {
[; ;main.h: 126: { 230, 100, 50, 15, 2, 0 },
[; ;main.h: 127: { 230, 0, 50, 15, 2, 0 },
[; ;main.h: 128: { 230, 0, 50, 15, 2, 0 },
[; ;main.h: 129: };
"130
[v _RHumidity `S6 ~T0 @X0 -> 3 `i e ]
[i _RHumidity
:U ..
:U ..
"131
-> -> 240 `i `ui
-> -> 120 `i `ui
-> -> 50 `i `ui
-> -> 15 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"132
-> -> 240 `i `ui
-> -> 17 `i `ui
-> -> 50 `i `ui
-> -> 15 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"133
-> -> 240 `i `ui
-> -> 17 `i `ui
-> -> 50 `i `ui
-> -> 15 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 130: rbox RHumidity[3] = {
[; ;main.h: 131: { 240, 120, 50, 15, 2, 0 },
[; ;main.h: 132: { 240, 17, 50, 15, 2, 0 },
[; ;main.h: 133: { 240, 17, 50, 15, 2, 0 },
[; ;main.h: 134: };
"135
[v _RAlarm `S6 ~T0 @X0 -> 3 `i e ]
[i _RAlarm
:U ..
:U ..
"136
-> -> 50 `i `ui
-> -> 120 `i `ui
-> -> 100 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"137
-> + -> 50 `i -> 100 `i `ui
-> -> 35 `i `ui
-> -> 100 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"138
-> -> 15 `i `ui
-> -> 23 `i `ui
-> -> 100 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
-> -> 19 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 135: rbox RAlarm[3] = {
[; ;main.h: 136: { 50, 120, 100, 8*2+2, 2, 0 },
[; ;main.h: 137: { 50+100, 35, 100, 8*2+2, 2, 0 },
[; ;main.h: 138: { 15, 23, 100, 8*2+2, 0x13, 0 },
[; ;main.h: 139: };
"141
[v _RPrevMonthCalendar `S6 ~T0 @X0 -> 3 `i e ]
[i _RPrevMonthCalendar
:U ..
:U ..
"142
-> -> 10 `i `ui
-> -> 160 `i `ui
-> -> 100 `i `ui
-> -> 80 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"143
-> -> 20 `i `ui
-> -> 65 `i `ui
-> -> 320 `i `ui
-> -> 200 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"144
-> - -> 320 `i -> 100 `i `ui
-> -> 40 `i `ui
-> -> 100 `i `ui
-> -> 80 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 141: rbox RPrevMonthCalendar[3] = {
[; ;main.h: 142: { 10, 160, 100, 80, 2, 0 },
[; ;main.h: 143: { 20, 65, 320, 200, 2, 0 },
[; ;main.h: 144: { 320-100, 40, 100, 80, 2, 0 },
[; ;main.h: 145: };
"146
[v _RThisMonthCalendar `S6 ~T0 @X0 -> 3 `i e ]
[i _RThisMonthCalendar
:U ..
:U ..
"147
-> + -> 10 `i -> 100 `i `ui
-> -> 160 `i `ui
-> -> 100 `i `ui
-> -> 80 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"148
-> -> 20 `i `ui
-> -> 65 `i `ui
-> -> 320 `i `ui
-> -> 200 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"149
-> - -> 320 `i -> 100 `i `ui
-> + -> 40 `i -> 80 `i `ui
-> -> 100 `i `ui
-> -> 80 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 146: rbox RThisMonthCalendar[3] = {
[; ;main.h: 147: { 10+100, 160, 100, 80, 2, 0 },
[; ;main.h: 148: { 20, 65, 320, 200, 2, 0 },
[; ;main.h: 149: { 320-100, 40+80, 100, 80, 2, 0 },
[; ;main.h: 150: };
"151
[v _RPostMonthCalendar `S6 ~T0 @X0 -> 3 `i e ]
[i _RPostMonthCalendar
:U ..
:U ..
"152
-> + -> 10 `i * -> 100 `i -> 2 `i `ui
-> -> 160 `i `ui
-> -> 100 `i `ui
-> -> 80 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"153
-> -> 20 `i `ui
-> -> 65 `i `ui
-> -> 320 `i `ui
-> -> 200 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
:U ..
"154
-> - -> 320 `i -> 100 `i `ui
-> + -> 40 `i * -> 80 `i -> 2 `i `ui
-> -> 100 `i `ui
-> -> 80 `i `ui
-> -> 2 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 151: rbox RPostMonthCalendar[3] = {
[; ;main.h: 152: { 10+100*2, 160, 100, 80, 2, 0 },
[; ;main.h: 153: { 20, 65, 320, 200, 2, 0 },
[; ;main.h: 154: { 320-100, 40+80*2, 100, 80, 2, 0 },
[; ;main.h: 155: };
"166
[v _ButtonObj3 `S6 ~T0 @X0 -> 0 `x e ]
[i _ButtonObj3
:U ..
:U ..
"167
-> -> 30 `i `ui
-> -> 10 `i `ui
-> * * -> 5 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
..
:U ..
"168
-> + -> 30 `i * * -> 5 `i -> 8 `i -> 2 `i `ui
-> -> 10 `i `ui
-> * * -> 3 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
..
:U ..
"169
-> + + -> 30 `i * * -> 5 `i -> 8 `i -> 2 `i * * -> 3 `i -> 8 `i -> 2 `i `ui
-> -> 10 `i `ui
-> * * -> 5 `i -> 8 `i -> 2 `i `ui
-> + * -> 8 `i -> 2 `i -> 2 `i `ui
..
:U ..
"170
-> -> 20 `i `ui
-> -> 35 `i `ui
-> * + + * -> 4 `i -> 20 `i -> 6 `i -> 2 `i -> 2 `i `ui
-> + * -> 27 `i -> 2 `i -> 4 `i `ui
..
:U ..
"171
-> -> 250 `i `ui
-> -> 10 `i `ui
-> -> 65 `i `ui
-> -> 50 `i `ui
..
:U ..
"172
-> -> 250 `i `ui
-> -> 70 `i `ui
-> -> 65 `i `ui
-> -> 50 `i `ui
..
:U ..
"173
-> -> 10 `i `ui
-> -> 160 `i `ui
-> + * -> 100 `i -> 2 `i -> 100 `i `ui
-> -> 80 `i `ui
..
..
]
[; ;main.h: 166: rbox ButtonObj3[] = {
[; ;main.h: 167: { 30, 10, 5*8*2, 8*2+2 },
[; ;main.h: 168: { 30 + 5*8*2, 10, 3*8*2, 8*2+2 },
[; ;main.h: 169: { 30 + 5*8*2 + 3*8*2, 10, 5*8*2, 8*2+2, },
[; ;main.h: 170: { 20, 35, (4*20+6+2)*2, 27*2+4, },
[; ;main.h: 171: { 250, 10, 65, 50, },
[; ;main.h: 172: { 250, 70, 65, 50, },
[; ;main.h: 173: { 10, 160, 100*2+100, 80, },
[; ;main.h: 174: };
"178
[v _TouchStatus `uc ~T0 @X0 1 e ]
[i _TouchStatus
-> -> 0 `i `uc
]
[; ;main.h: 178: uint8_t TouchStatus = 0;
"187
[v _TouchX `ui ~T0 @X0 1 e ]
[v _TouchY `ui ~T0 @X0 1 e ]
[; ;main.h: 187: uint16_t TouchX, TouchY;
"188
[v _Test_x `ui ~T0 @X0 1 e ]
[v _Test_y `ui ~T0 @X0 1 e ]
[; ;main.h: 188: uint16_t Test_x, Test_y;
"195
[v _DateTime `uc ~T0 @X0 -> 7 `i e ]
[i _DateTime
:U ..
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 33 `i `uc
..
]
[; ;main.h: 195: uint8_t DateTime[7] = {0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x21};
"197
[v _preDateTime `uc ~T0 @X0 -> 3 `i e ]
[; ;main.h: 197: uint8_t preDateTime[3];
"200
[v _TmpTime `uc ~T0 @X0 -> 7 `i e ]
[; ;main.h: 200: uint8_t TmpTime[7];
"202
[v _AlarmTime `uc ~T0 @X0 -> 3 `i e ]
[i _AlarmTime
:U ..
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 127 `i `uc
..
]
[; ;main.h: 202: uint8_t AlarmTime[3] = {0, 0, 0x7f};
"203
[v _SmoothAlarmTime `uc ~T0 @X0 -> 3 `i e ]
[i _SmoothAlarmTime
:U ..
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 127 `i `uc
..
]
[; ;main.h: 203: uint8_t SmoothAlarmTime[3] = {0, 0, 0x7f};
"205
[v _AlarmColor `ui ~T0 @X0 -> 2 `i e ]
[; ;main.h: 205: uint16_t AlarmColor[2];
"207
[v _FirstDraw `uc ~T0 @X0 1 e ]
[i _FirstDraw
-> -> 1 `i `uc
]
[; ;main.h: 207: uint8_t FirstDraw = 1;
[v F264 `uc ~T0 @X0 -> 4 `i t ]
"211
[v _WeekDays `F264 ~T0 @X0 -> 0 `x e ]
[i _WeekDays
:U ..
:U ..
-> 83 `c
-> 117 `c
-> 110 `c
-> 0 `c
..
:U ..
-> 77 `c
-> 111 `c
-> 110 `c
-> 0 `c
..
:U ..
-> 84 `c
-> 117 `c
-> 101 `c
-> 0 `c
..
:U ..
-> 87 `c
-> 101 `c
-> 100 `c
-> 0 `c
..
:U ..
-> 84 `c
-> 104 `c
-> 117 `c
-> 0 `c
..
:U ..
-> 70 `c
-> 114 `c
-> 105 `c
-> 0 `c
..
:U ..
-> 83 `c
-> 97 `c
-> 116 `c
-> 0 `c
..
..
]
[; ;main.h: 211: char WeekDays[][4] = {
[; ;main.h: 212: "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat",
[; ;main.h: 214: };
"219
[v _Temp `i ~T0 @X0 1 e ]
[v _Humidity `i ~T0 @X0 1 e ]
[; ;main.h: 219: int16_t Temp, Humidity;
[; ;RTC8025.h: 18: uint8_t Hex2Bcd(uint8_t x);
[; ;RTC8025.h: 19: uint8_t Bcd2Hex(uint8_t x);
[; ;RTC8025.h: 21: void RTC_resetAlarm(void);
[; ;RTC8025.h: 23: void RTC_setAlarmTime(uint8_t *alarmtime);
[; ;RTC8025.h: 24: void IncDecTime(int16_t dmm, int8_t *hh, int8_t *mm);
[; ;RTC8025.h: 25: void RTC_setTime(uint8_t *datetime);
[; ;RTC8025.h: 26: void RTC_setDate(uint8_t *datetime);
[; ;RTC8025.h: 27: void dateErrorCheck(uint8_t *dateTime);
[; ;RTC8025.h: 28: uint8_t getWeekdays(uint8_t *year, uint8_t *month, uint8_t *day);
[; ;RTC8025.h: 29: void RTC_read(uint8_t *datetime);
[; ;RTC8025.h: 30: void resetCTFG(void);
[; ;RTC8025.h: 31: void readReg(void);
[; ;RTC8025.h: 33: void init_RTC(uint8_t *datetime);
"66 mcc_generated_files/fatfs/ff_time.c
[v _decimalToFatTime `(ul ~T0 @X0 1 sf6`ui`uc`uc`uc`uc`uc ]
"67
{
[; ;ff_time.c: 66: static DWORD decimalToFatTime(uint16_t year, uint8_t month, uint8_t day, uint8_t hour, uint8_t minute, uint8_t seconds)
[; ;ff_time.c: 67: {
[e :U _decimalToFatTime ]
"66
[v _year `ui ~T0 @X0 1 r1 ]
[v _month `uc ~T0 @X0 1 r2 ]
[v _day `uc ~T0 @X0 1 r3 ]
[v _hour `uc ~T0 @X0 1 r4 ]
[v _minute `uc ~T0 @X0 1 r5 ]
[v _seconds `uc ~T0 @X0 1 r6 ]
"67
[f ]
"68
[v _fatTime `ul ~T0 @X0 1 a ]
[; ;ff_time.c: 68: DWORD fatTime;
[; ;ff_time.c: 70: fatTime = (seconds >> 1);
"70
[e = _fatTime -> -> >> -> _seconds `i -> 1 `i `l `ul ]
[; ;ff_time.c: 71: fatTime |= ( ((DWORD)minute) << 5 );
"71
[e =| _fatTime << -> _minute `ul -> 5 `i ]
[; ;ff_time.c: 72: fatTime |= ( ((DWORD)hour) << 11 );
"72
[e =| _fatTime << -> _hour `ul -> 11 `i ]
[; ;ff_time.c: 73: fatTime |= ( ((DWORD)day) << 16 );
"73
[e =| _fatTime << -> _day `ul -> 16 `i ]
[; ;ff_time.c: 74: fatTime |= ( ((DWORD)month) << 21 );
"74
[e =| _fatTime << -> _month `ul -> 21 `i ]
[; ;ff_time.c: 75: fatTime |= ( ((DWORD)(year - 1980)) << 25 );
"75
[e =| _fatTime << -> - _year -> -> 1980 `i `ui `ul -> 25 `i ]
[; ;ff_time.c: 77: return fatTime;
"77
[e ) _fatTime ]
[e $UE 7  ]
[; ;ff_time.c: 78: }
"78
[e :UE 7 ]
}
"80
[v _get_fattime `(ul ~T0 @X0 1 ef ]
"81
{
[; ;ff_time.c: 80: DWORD get_fattime (void)
[; ;ff_time.c: 81: {
[e :U _get_fattime ]
[f ]
[; ;ff_time.c: 83: return decimalToFatTime(2000+Bcd2Hex(DateTime[6]), Bcd2Hex(DateTime[5]), Bcd2Hex(DateTime[4]), Bcd2Hex(DateTime[2]), Bcd2Hex(DateTime[1]), Bcd2Hex(DateTime[0]));
"83
[e ) ( _decimalToFatTime (4 , , , , , -> + -> 2000 `i -> ( _Bcd2Hex (1 *U + &U _DateTime * -> -> -> 6 `i `ui `ux -> -> # *U &U _DateTime `ui `ux `i `ui ( _Bcd2Hex (1 *U + &U _DateTime * -> -> -> 5 `i `ui `ux -> -> # *U &U _DateTime `ui `ux ( _Bcd2Hex (1 *U + &U _DateTime * -> -> -> 4 `i `ui `ux -> -> # *U &U _DateTime `ui `ux ( _Bcd2Hex (1 *U + &U _DateTime * -> -> -> 2 `i `ui `ux -> -> # *U &U _DateTime `ui `ux ( _Bcd2Hex (1 *U + &U _DateTime * -> -> -> 1 `i `ui `ux -> -> # *U &U _DateTime `ui `ux ( _Bcd2Hex (1 *U + &U _DateTime * -> -> -> 0 `i `ui `ux -> -> # *U &U _DateTime `ui `ux ]
[e $UE 8  ]
[; ;ff_time.c: 84: }
"84
[e :UE 8 ]
}
